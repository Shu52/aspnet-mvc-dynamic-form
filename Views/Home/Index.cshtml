@model DynamicForms.Models.ViewModels.QuoteRatingViewModel
@{
    ViewData["Title"] = "Home Page";
}

@* READ THIS
    Don't judge my inline styles
*@

<form method="post" asp-controller="Home" asp-action="Index">

@* READ THIS
    The form fields are named such that MVC will understand how to bind them into a List
    of QuoteRatings on the viewmodel when the form is posted.

    Take a look at the discussion of binding to collections in the documentaton:
    https://docs.microsoft.com/en-us/aspnet/core/mvc/models/model-binding?view=aspnetcore-2.2

    Here's another good example
    https://stackoverflow.com/questions/41873171/how-can-i-bind-an-array-with-asp-for-tag
*@
@for(var i=0; i<Model.QuoteRatings.Count; i++) {
    <input type="hidden" asp-for="@Model.QuoteRatings[i].Quote.Id"/>
    <h2>
        @(Model.QuoteRatings[i].Quote.Text)
    </h2>
    <h3 style="text-align: right">
        --@(Model.QuoteRatings[i].Quote.Speaker)
    </h3>
    <div style="width:100%; text-align: center; margin-bottom:30px; font-size: 2em;">
    @for(var j=0; j<Model.RatingOptions.Count; j++) {
        <span style="margin: 0 5px;">
            <input asp-for="@Model.QuoteRatings[i].Rating.Id" 
                   id=@($"rating-{i}-{j}")
                   value="@(Model.RatingOptions[j].Id)"
                   type="radio" />
            <label for=@($"rating-{i}-{j}")>
                @(Model.RatingOptions[j].Text)
            </label>
        </span>
    }
    </div>
    <hr/>
}
<div style="margin: 50px 0; text-align: center">
    <input class="btn btn-success btn-lg" type="submit" value="Submit"/>
</div>
</form>